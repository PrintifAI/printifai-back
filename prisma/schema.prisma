generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

enum PredictionStatus {
    Created
    Failed
    Ready
}

model Prediction {
    id String @id() @default(uuid())

    sourcePrompt     String
    translatedPrompt String

    predictionId String @unique
    output       Bytes?

    predictionTime Int?

    status PredictionStatus @default(Created)

    nodelete Boolean @default(false)

    createdAt        DateTime           @default(now())

    removedBackground RemoveBackground[]
}

model RemoveBackground {
    predictionId String

    externalId String @unique

    status PredictionStatus @default(Created)

    output Bytes?

    predictionTime Int?

    createdAt DateTime @default(now())

    prediction Prediction @relation(fields: [predictionId], references: [id], onDelete: Cascade)
}

// enum Size {
//     XS
//     S
//     M
//     L
//     XL
//     XXL
// }

// model Item {
//     id      Int     @id @default(autoincrement())
//     size    Size
//     type    String
//     pictureId String
//     price   Int
//     orderId   Int
//     createdAt DateTime @default(now())

//     order     Order    @relation(fields: [orderId], references: [id])
//     picture Picture @relation(fields: [pictureId], references: [id])
// }

// model Order {
//     id      Int    @id @default(autoincrement())

//     address String

//     createdAt DateTime @default(now())

//     items   Item[]
// }
